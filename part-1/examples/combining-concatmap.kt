val userDownloads = Observable
	.fromArray(Pair("File1", 6L), Pair("File2", 4L), Pair("File3", 2L))

fun downloadFile(file: String, delay: Long) = Observable.just(file)
	.map { "$it OK" }
	.delay(delay, TimeUnit.SECONDS)`

userDownloads.concatMap { (file, delay) -> downloadFile(file, delay) }
	.blockingSubscribe { }

/* ######################################## OUTPUT ######################################### */
--(File1,6S)--(File2,4S)--(File3,2S)--|--------------------------------------------------------
===============================================================================================
                                           concatMap()
--\-----------------------(File1 OK)--|--------------------------------------------------------
--------------------------------------\----------------(File2 OK)--|---------------------------
-------------------------------------------------------------------\--------(File3 OK)--|------
===============================================================================================
--------------------------(File1 OK)-------------------(File2 OK)-----------(File3 OK)--|------
 




userDownloads.concatMapEager { (file, delay) -> downloadFile(file, delay) }
	.blockingSubscribe { }

/* ######################################## OUTPUT ######################################### */
--(File1,6S)--(File2,4S)--(File3,2S)--|--------------------------------------------------------
===============================================================================================
                                        concatMapEager()
--\-----------------------(File1 OK)--|--------------------------------------------------------
--\----------------(File2 OK)--|---------------------------------------------------------------
--\--------(File3 OK)--|-----------------------------------------------------------------------
===============================================================================================
--------------------------(File1 OK)--(File2 OK)--(File3 OK)--|--------------------------------
 